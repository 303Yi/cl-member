<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.member.mapper.member.MemberProcessLogMapper" >
  <resultMap id="BaseResultMap" type="com.cl.member.model.member.MemberProcessLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="log_type_id" property="logTypeId" jdbcType="TINYINT" />
    <result column="log_content" property="logContent" jdbcType="VARCHAR" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_ip" property="createIp" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, member_id, log_type_id, log_content, create_person, create_date, create_ip
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_member_process_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_member_process_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cl.member.model.member.MemberProcessLog" >
    insert into m_member_process_log (id, member_id, log_type_id, 
      log_content, create_person, create_date, 
      create_ip)
    values (#{id,jdbcType=INTEGER}, #{memberId,jdbcType=INTEGER}, #{logTypeId,jdbcType=TINYINT}, 
      #{logContent,jdbcType=VARCHAR}, #{createPerson,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createIp,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cl.member.model.member.MemberProcessLog" >
    insert into m_member_process_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="logTypeId != null" >
        log_type_id,
      </if>
      <if test="logContent != null" >
        log_content,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createIp != null" >
        create_ip,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="logTypeId != null" >
        #{logTypeId,jdbcType=TINYINT},
      </if>
      <if test="logContent != null" >
        #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null" >
        #{createIp,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.member.model.member.MemberProcessLog" >
    update m_member_process_log
    <set >
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="logTypeId != null" >
        log_type_id = #{logTypeId,jdbcType=TINYINT},
      </if>
      <if test="logContent != null" >
        log_content = #{logContent,jdbcType=VARCHAR},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createIp != null" >
        create_ip = #{createIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.member.model.member.MemberProcessLog" >
    update m_member_process_log
    set member_id = #{memberId,jdbcType=INTEGER},
      log_type_id = #{logTypeId,jdbcType=TINYINT},
      log_content = #{logContent,jdbcType=VARCHAR},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_ip = #{createIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>