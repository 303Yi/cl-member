<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cl.member.mapper.member.CommodityCommentMapper" >
  <resultMap id="BaseResultMap" type="com.cl.member.model.member.CommodityComment" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="no" property="no" jdbcType="VARCHAR" />
    <result column="member_id" property="memberId" jdbcType="INTEGER" />
    <result column="score" property="score" jdbcType="TINYINT" />
    <result column="size_type_id" property="sizeTypeId" jdbcType="TINYINT" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="reply" property="reply" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_person" property="createPerson" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="update_person" property="updatePerson" jdbcType="VARCHAR" />
    <result column="update_date" property="updateDate" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, no, member_id, score, size_type_id, remark, reply, status, create_person, create_date, 
    update_person, update_date
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from m_commodity_comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from m_commodity_comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.cl.member.model.member.CommodityComment" >
    insert into m_commodity_comment (id, no, member_id, 
      score, size_type_id, remark, 
      reply, status, create_person, 
      create_date, update_person, update_date
      )
    values (#{id,jdbcType=INTEGER}, #{no,jdbcType=VARCHAR}, #{memberId,jdbcType=INTEGER}, 
      #{score,jdbcType=TINYINT}, #{sizeTypeId,jdbcType=TINYINT}, #{remark,jdbcType=VARCHAR}, 
      #{reply,jdbcType=VARCHAR}, #{status,jdbcType=TINYINT}, #{createPerson,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updatePerson,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.cl.member.model.member.CommodityComment" >
    insert into m_commodity_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="no != null" >
        no,
      </if>
      <if test="memberId != null" >
        member_id,
      </if>
      <if test="score != null" >
        score,
      </if>
      <if test="sizeTypeId != null" >
        size_type_id,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="reply != null" >
        reply,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createPerson != null" >
        create_person,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="updatePerson != null" >
        update_person,
      </if>
      <if test="updateDate != null" >
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="no != null" >
        #{no,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        #{memberId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        #{score,jdbcType=TINYINT},
      </if>
      <if test="sizeTypeId != null" >
        #{sizeTypeId,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        #{reply,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createPerson != null" >
        #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cl.member.model.member.CommodityComment" >
    update m_commodity_comment
    <set >
      <if test="no != null" >
        no = #{no,jdbcType=VARCHAR},
      </if>
      <if test="memberId != null" >
        member_id = #{memberId,jdbcType=INTEGER},
      </if>
      <if test="score != null" >
        score = #{score,jdbcType=TINYINT},
      </if>
      <if test="sizeTypeId != null" >
        size_type_id = #{sizeTypeId,jdbcType=TINYINT},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="reply != null" >
        reply = #{reply,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createPerson != null" >
        create_person = #{createPerson,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updatePerson != null" >
        update_person = #{updatePerson,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null" >
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cl.member.model.member.CommodityComment" >
    update m_commodity_comment
    set no = #{no,jdbcType=VARCHAR},
      member_id = #{memberId,jdbcType=INTEGER},
      score = #{score,jdbcType=TINYINT},
      size_type_id = #{sizeTypeId,jdbcType=TINYINT},
      remark = #{remark,jdbcType=VARCHAR},
      reply = #{reply,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_person = #{createPerson,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_person = #{updatePerson,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>